# 配置运行端口号
server.port=3000

serverPictureUrl = http://127.0.0.1:3000

# 配置数据库
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/blog2?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8
spring.datasource.username=root
spring.datasource.password=cc108852

# 定义日志 (需要配置 config/aspect/LogAspect 文件)
logging.level.root=info
logging.level.com.xiu=debug
logging.file.path=log/blog-dev.log
logging.level.com.xiudu.blog.mapper= trace
# 定义 mybatis-plus 配置
mybatis-plus.configuration.cache-enabled=true
mybatis-plus.configuration.use-generated-keys=true
mybatis-plus.configuration.default-executor-type=REUSE
mybatis-plus.configuration.use-actual-param-name=true
mybatis-plus.type-aliases-package=com.xiudu.pojo.DO

############## Sa-Token 配置 (文档: https://sa-token.cc) ##############
# token 名称（同时也是 cookie 名称）
sa-token.token-name=satoken
# token 有效期（单位：秒） 默认30天，-1 代表永久有效
sa-token.timeout=2592000
# token 最低活跃频率（单位：秒），如果 token 超过此时间没有访问系统就会被冻结，默认-1 代表不限制，永不冻结
sa-token.active-timeout=-1
# 是否允许同一账号多地同时登录 （为 true 时允许一起登录, 为 false 时新登录挤掉旧登录）
sa-token.is-concurrent=false
## 在多人登录同一账号时，是否共用一个 token （为 true 时所有登录共用一个 token, 为 false 时每次登录新建一个 token）
#sa-token.is-share=true
## token 风格（默认可取值：uuid、simple-uuid、random-32、random-64、random-128、tik）
#sa-token.token-style=simple-uuid
# jwt 密钥
sa-token.jwt-secret-key=afdfggffshcbghjhgvhgbhjghujfvc
# 是否输出操作日志
sa-token.is-log=true
sa-token.is-read-cookie=false
# 配置 Sa-Token 单独使用的 Redis 连接
sa-token.alone-redis.host=127.0.0.1
sa-token.alone-redis.port=6379
sa-token.alone-redis.password=
sa-token.alone-redis.database=4
sa-token.alone-redis.timeout=10s
################# redis 配置 ######################
spring.data.redis.host=127.0.0.1
spring.data.redis.port=6379
spring.data.redis.password=
spring.data.redis.database=3
spring.data.redis.lettuce.pool.max-active=8
spring.data.redis.lettuce.pool.max-idle=8
spring.data.redis.lettuce.pool.min-idle=0
spring.data.redis.lettuce.pool.max-wait=100ms